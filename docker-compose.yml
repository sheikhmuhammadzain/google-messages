version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: google-messages-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: google_messages
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: google-messages-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      MONGODB_URI: mongodb://mongodb:27017/google-messages
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    depends_on:
      - mongodb
    networks:
      - app-network

  # Web App
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: google-messages-web
    restart: unless-stopped
    ports:
      - "5173:80"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_SOCKET_URL: http://localhost:3000
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
